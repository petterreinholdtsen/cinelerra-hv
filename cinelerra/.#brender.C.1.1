#include "brender.h"
#include "mutex.h"




BRender::BRender(MWindow *mwindow)
{
	this->mwindow = mwindow;
}

BRender::~BRender()
{
}


// Give the last position of the EDL which hasn't changed.
// We copy the EDL and restart rendering at the lesser of position and
// our position.
void BRender::update(EDL *edl, double position)
{
}







BRenderCommand::BRenderCommand()
{
}

BRenderCommand::~BRenderCommand()
{
}








BRenderThread::BRenderThread()
 : Thread()
{
	input_lock = new Mutex;
	output_lock = new Mutex;
}

BRenderThread::~BRenderThread()
{
	delete input_lock;
	delete output_lock;
}

void BRenderThread::send_command(BRenderCommand)
{
}






