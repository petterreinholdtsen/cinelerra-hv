dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/control/control.c)
dnl *************************************************
dnl current:revision:age
dnl change (without API) = c:r+1:a
dnl change API = c+1:0:a
dnl add API = c+1:0:a+1
dnl remove API = c+1:0:0
dnl *************************************************
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(alsa-lib, 0.9.0rc2)
eval LIBTOOL_VERSION_INFO="2:0:0"
dnl *************************************************
AM_CONDITIONAL(INSTALL_M4, test "x${ACLOCAL}" = "xaclocal")

AC_PREFIX_DEFAULT(/usr)

dnl Checks for programs.

dnl try to gues cross-compiler if not set
if test "x$target" != "x$host" -a -z "`echo $CC | grep -e '-gcc'`";
then
  AC_MSG_CHECKING(for cross-compiler)

  which ${program_prefix}gcc >/dev/null 2>&1 && CC=${program_prefix}gcc
  which ${target_cpu}-${target_os}-gcc >/dev/null 2>&1 \
  && CC=${target_cpu}-${target-os}-gcc
  which ${target_cpu}-${target_vendor}-${target_os}-gcc >/dev/null 2>&1 \
  && CC=${target_cpu}-${target_vendor}-${target_os}-gcc

  AC_MSG_RESULT($CC)
fi
	    

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S 
AC_DISABLE_STATIC
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL

dnl kernel header files
AC_MSG_CHECKING(for kernel header files)
AC_ARG_WITH(kernel,
  [  --with-kernel=ver       specify kernel version (for example 2.5.5-pre1)],
  [kerneldir="$withval"], [kerneldir=""])
if test "$kerneldir" != "" -a -r "/lib/modules/$kerneldir/build/include/sound"; then
  kerneldir="/lib/modules/$kerneldir/build/include"
  AC_MSG_RESULT($kerneldir)
else
  if test -z "$kerneldir"; then
    AC_MSG_RESULT("not specified")
  else
    AC_MSG_RESULT("directory /lib/modules/$kerneldir/build/include/sound not found")
  fi
  kerneldir=""
fi

dnl path for sound/asound.h
AC_MSG_CHECKING(for directory with ALSA kernel headers)
AC_ARG_WITH(soundbase,
  [  --with-soundbase=dir    specify base directory with kernel sound headers (optional)],
  [soundbasedir="$withval"], [soundbasedir="$kerneldir"])
if test "$soundbasedir" != "" -a -r "$soundbasedir/sound" ; then
  ALSA_CFLAGS="$ALSA_CFLAGS -I$soundbasedir"
  CFLAGS="$CFLAGS -I$soundbasedir"
  AC_MSG_RESULT($ALSA_CFLAGS)
else
  if test "x$prefix" != xNONE; then
    aprefix=$prefix
  else
    aprefix=$ac_default_prefix
  fi
  if test -z "$soundbasedir" -a -r "$aprefix/include/sound"; then
    ALSA_CFLAGS="$ALSA_CFLAGS -I$aprefix/include"
    CFLAGS="$CFLAGS -I$aprefix/include"
    AC_MSG_RESULT($ALSA_CFLAGS)
  else
    AC_MSG_RESULT("not specified - using C compilator defaults")
  fi
fi

dnl Checks for header files.
AC_HEADER_STDC
AM_CONFIG_HEADER(include/config.h)
AC_CHECK_HEADERS(sound/asound.h)


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_HEADER_TIME

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_CHECK_FUNC([hsearch_r], [HAVE_HSEARCH_R=yes])
AM_CONDITIONAL(ALSA_HSEARCH_R, [test "x$HAVE_HSEARCH_R" != xyes])

ALSA_CHECK_DRIVER
SAVE_LIBRARY_VERSION
AC_SUBST(LIBTOOL_VERSION_INFO)

test "x$prefix" = xNONE && prefix=$ac_default_prefix

eval dir="$datadir"
case "$dir" in
/*) ;;
*) dir="$PWD/$dir"
esac
AC_DEFINE_UNQUOTED(DATADIR, "$dir")

dnl Check for debug...
AC_MSG_CHECKING(for debug)
AC_ARG_WITH(debug,
  [  --with-debug=yes,no     library will (not) be compiled with asserts],
  debug="$withval", debug="yes")
if test "$debug" = "yes"; then
  AC_MSG_RESULT(yes)
else
  AC_DEFINE(NDEBUG)
  AC_MSG_RESULT(no)
fi

AC_ARG_WITH(softfloat,
  [  --with-softfloat        do you have floating point unit on this machine? (optional)],
  [  AC_DEFINE(HAVE_SOFT_FLOAT, "1")],)

dnl Check for architecture
AC_MSG_CHECKING(for architecture)
case "$target" in
i?86*)
  AC_MSG_RESULT(x86)
  ;;
alpha*)
  AC_MSG_RESULT(alpha)
  ;;
powerpc*|ppc*)
  AC_MSG_RESULT(ppc)
  CPPFLAGS="$CPPFLAGS -D__ppc__"
  ;;
ia64*)
  AC_MSG_RESULT(ia64)
  CPPFLAGS="$CPPFLAGS -D__ia64__"
  ;;
mips*)
  AC_MSG_RESULT(mips)
  CPPFLAGS="$CPPFLAGS -D__mips__"
  ;;
arm*)
  AC_MSG_RESULT(arm)
  CPPFLAGS="$CPPFLAGS -D__arm__"
  ;;
*)
  AC_MSG_RESULT($host_cpu)
  echo "No atomic operations supported.." 
  ;;
esac

AC_OUTPUT(Makefile doc/Makefile doc/pictures/Makefile include/Makefile src/Makefile \
          src/control/Makefile src/mixer/Makefile src/pcm/Makefile \
	  src/rawmidi/Makefile src/timer/Makefile \
          src/hwdep/Makefile src/seq/Makefile src/instr/Makefile \
          src/compat/Makefile src/conf/Makefile \
	  src/conf/cards/Makefile src/conf/pcm/Makefile \
	  aserver/Makefile test/Makefile utils/Makefile \
          utils/alsa-lib.spec)
