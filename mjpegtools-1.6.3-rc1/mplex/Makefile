# Makefile.in generated by automake 1.8.3 from Makefile.am.
# mplex/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Process this file with Automake to produce Makefile.in



SOURCES = $(libmplex2_la_SOURCES) $(mplex_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/mjpegtools
pkglibdir = $(libdir)/mjpegtools
pkgincludedir = $(includedir)/mjpegtools
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = mplex$(EXEEXT)
subdir = mplex
DIST_COMMON = README $(libmplex_include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in COPYING TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(mkdir_p)
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libmplex_includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libmplex2_la_DEPENDENCIES = $(top_builddir)/utils/libmjpegutils.la
am__libmplex2_la_SOURCES_DIST = ac3strm_in.cpp audiostrm_out.cpp \
	bits.cpp decodebufmodel.cpp dtsstrm_in.cpp inputstrm.cpp \
	interact.cpp lpcmstrm_in.cpp mpastrm_in.cpp multiplexor.cpp \
	padstrm.cpp stillsstream.cpp stream_params.cpp systems.cpp \
	videostrm_in.cpp videostrm_out.cpp zalphastrm.hpp \
	zalphastrm_in.cpp zalphastrm_out.cpp
#am__objects_1 = libmplex2_la-zalphastrm_in.lo \
#	libmplex2_la-zalphastrm_out.lo
am_libmplex2_la_OBJECTS = libmplex2_la-ac3strm_in.lo \
	libmplex2_la-audiostrm_out.lo libmplex2_la-bits.lo \
	libmplex2_la-decodebufmodel.lo libmplex2_la-dtsstrm_in.lo \
	libmplex2_la-inputstrm.lo libmplex2_la-interact.lo \
	libmplex2_la-lpcmstrm_in.lo libmplex2_la-mpastrm_in.lo \
	libmplex2_la-multiplexor.lo libmplex2_la-padstrm.lo \
	libmplex2_la-stillsstream.lo libmplex2_la-stream_params.lo \
	libmplex2_la-systems.lo libmplex2_la-videostrm_in.lo \
	libmplex2_la-videostrm_out.lo $(am__objects_1)
libmplex2_la_OBJECTS = $(am_libmplex2_la_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_mplex_OBJECTS = main.$(OBJEXT)
mplex_OBJECTS = $(am_mplex_OBJECTS)
am__DEPENDENCIES_1 =
mplex_DEPENDENCIES = $(top_builddir)/mplex/libmplex2.la \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/libmplex2_la-ac3strm_in.Plo \
	./$(DEPDIR)/libmplex2_la-audiostrm_out.Plo \
	./$(DEPDIR)/libmplex2_la-bits.Plo \
	./$(DEPDIR)/libmplex2_la-decodebufmodel.Plo \
	./$(DEPDIR)/libmplex2_la-dtsstrm_in.Plo \
	./$(DEPDIR)/libmplex2_la-inputstrm.Plo \
	./$(DEPDIR)/libmplex2_la-interact.Plo \
	./$(DEPDIR)/libmplex2_la-lpcmstrm_in.Plo \
	./$(DEPDIR)/libmplex2_la-mpastrm_in.Plo \
	./$(DEPDIR)/libmplex2_la-multiplexor.Plo \
	./$(DEPDIR)/libmplex2_la-padstrm.Plo \
	./$(DEPDIR)/libmplex2_la-stillsstream.Plo \
	./$(DEPDIR)/libmplex2_la-stream_params.Plo \
	./$(DEPDIR)/libmplex2_la-systems.Plo \
	./$(DEPDIR)/libmplex2_la-videostrm_in.Plo \
	./$(DEPDIR)/libmplex2_la-videostrm_out.Plo \
	./$(DEPDIR)/libmplex2_la-zalphastrm_in.Plo \
	./$(DEPDIR)/libmplex2_la-zalphastrm_out.Plo \
	./$(DEPDIR)/main.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libmplex2_la_SOURCES) $(mplex_SOURCES)
DIST_SOURCES = $(am__libmplex2_la_SOURCES_DIST) $(mplex_SOURCES)
libmplex_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libmplex_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/src/redhat/cinelerra-2.0/mjpegtools-1.6.3-rc1/missing --run aclocal-1.8
ALTIVEC_CFLAGS = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /usr/src/redhat/cinelerra-2.0/mjpegtools-1.6.3-rc1/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /usr/src/redhat/cinelerra-2.0/mjpegtools-1.6.3-rc1/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/src/redhat/cinelerra-2.0/mjpegtools-1.6.3-rc1/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/src/redhat/cinelerra-2.0/mjpegtools-1.6.3-rc1/missing --run automake-1.8
AWK = gawk
CC = gcc
CCAS = gcc
CCASFLAGS = -I/usr/src/redhat/cinelerra-2.0/alsa-lib-1.0.8/include -L/usr/src/redhat/cinelerra-2.0/alsa-lib-1.0.8/x86_64
CCDEPMODE = depmode=gcc3
CFLAGS = -march=k8 -mtune=k8 -I/usr/src/redhat/cinelerra-2.0/alsa-lib-1.0.8/include -L/usr/src/redhat/cinelerra-2.0/alsa-lib-1.0.8/x86_64 -pthread -Wall -Wunused
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -march=k8 -mtune=k8 -g -O2 -pthread 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
GTK_CFLAGS = -DXTHREADS -D_REENTRANT -DXUSE_MTSAFE_API -I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/X11R6/include -I/usr/include/atk-1.0 -I/usr/include/pango-1.0 -I/usr/include/freetype2 -I/usr/include/freetype2/config -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HAVE_ALTIVEC_FALSE = 
HAVE_ALTIVEC_TRUE = #
HAVE_ASM_MMX_FALSE = #
HAVE_ASM_MMX_TRUE = 
HAVE_GTK_FALSE = #
HAVE_GTK_TRUE = 
HAVE_LIBPNG_FALSE = #
HAVE_LIBPNG_TRUE = 
HAVE_PPCCPU_FALSE = 
HAVE_PPCCPU_TRUE = #
HAVE_SDL_FALSE = #
HAVE_SDL_TRUE = 
HAVE_V4L_FALSE = #
HAVE_V4L_OR_SDL_FALSE = #
HAVE_V4L_OR_SDL_TRUE = 
HAVE_V4L_TRUE = 
HAVE_X86CPU_FALSE = #
HAVE_X86CPU_TRUE = 
HAVE_X_FALSE = #
HAVE_X_TRUE = 
HAVE_ZALPHA_FALSE = 
HAVE_ZALPHA_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JPEG_CFLAGS = 
JPEG_LIBS = -ljpeg
LDFLAGS = 
LIBDV_CFLAGS = 
LIBDV_LIBS = 
LIBGETOPT_LIB = 
LIBM_LIBS = -lm 
LIBOBJS = 
LIBPNG_CFLAGS = -I/usr/include/libpng12  
LIBPNG_LIBS = -lpng12  
LIBQUICKTIME_CFLAGS = 
LIBQUICKTIME_LIBS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 3
LT_CURRENT = 3
LT_RELEASE = 1.6
LT_REVISION = 3
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /usr/src/redhat/cinelerra-2.0/mjpegtools-1.6.3-rc1/missing --run makeinfo
OBJEXT = o
PACKAGE = mjpegtools
PACKAGE_BUGREPORT = mjpeg-developer@lists.sourceforge.net
PACKAGE_NAME = mjpegtools
PACKAGE_STRING = mjpegtools 1.6.3-rc1
PACKAGE_TARNAME = mjpegtools
PACKAGE_VERSION = 1.6.3-rc1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PROGRAM_NOPIC = -fno-PIC
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib64 -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
V4LCONF_LIBS =  -L/usr/X11R6/lib64 -lXxf86dga
VERSION = 1.6.3-rc1
X_CFLAGS =  -I/usr/X11R6/include
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib64
X_PRE_LIBS =  -lSM -lICE
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
acx_pthread_config = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /usr/src/redhat/cinelerra-2.0/mjpegtools-1.6.3-rc1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
EXTRA_DIST = \
	README \
	INSTRUCT \
	TODO

MAINTAINERCLEANFILES = Makefile.in
INCLUDES = -I $(top_srcdir) -I $(top_srcdir)/utils
lib_LTLIBRARIES = libmplex2.la
ZALPHA_FILES = 
#ZALPHA_FILES = zalphastrm.hpp zalphastrm_in.cpp zalphastrm_out.cpp
ZALPHA_FLAGS = 
#ZALPHA_FLAGS = -DZALPHA
libmplex2_la_SOURCES = \
	ac3strm_in.cpp \
	audiostrm_out.cpp \
	bits.cpp \
	decodebufmodel.cpp \
	dtsstrm_in.cpp \
	inputstrm.cpp \
	interact.cpp \
	lpcmstrm_in.cpp \
	mpastrm_in.cpp \
	multiplexor.cpp \
	padstrm.cpp \
	stillsstream.cpp \
	stream_params.cpp \
	systems.cpp \
	videostrm_in.cpp \
	videostrm_out.cpp \
	$(ZALPHA_FILES)

libmplex_includedir = $(pkgincludedir)/mplex
libmplex_include_HEADERS = \
	audiostrm.hpp \
	aunit.hpp \
	aunitbuffer.hpp \
	bits.hpp \
	decodebufmodel.hpp \
	inputstrm.hpp \
	interact.hpp \
	mplexconsts.hpp \
	multiplexor.hpp \
	outputstrm.hpp \
	padstrm.hpp \
	stillsstream.hpp \
	stream_params.hpp \
	systems.hpp \
	videostrm.hpp

libmplex2_la_LDFLAGS = \
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
	-release $(LT_RELEASE)

libmplex2_la_LIBADD = \
	$(top_builddir)/utils/libmjpegutils.la

libmplex2_la_CXXFLAGS = $(ZALPHA_FLAGS)
mplex_SOURCES = main.cpp 
mplex_LDADD = \
	$(top_builddir)/mplex/libmplex2.la \
	 $(LIBM_LIBS) 

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  mplex/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  mplex/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmplex2.la: $(libmplex2_la_OBJECTS) $(libmplex2_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libmplex2_la_LDFLAGS) $(libmplex2_la_OBJECTS) $(libmplex2_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mplex$(EXEEXT): $(mplex_OBJECTS) $(mplex_DEPENDENCIES) 
	@rm -f mplex$(EXEEXT)
	$(CXXLINK) $(mplex_LDFLAGS) $(mplex_OBJECTS) $(mplex_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libmplex2_la-ac3strm_in.Plo
include ./$(DEPDIR)/libmplex2_la-audiostrm_out.Plo
include ./$(DEPDIR)/libmplex2_la-bits.Plo
include ./$(DEPDIR)/libmplex2_la-decodebufmodel.Plo
include ./$(DEPDIR)/libmplex2_la-dtsstrm_in.Plo
include ./$(DEPDIR)/libmplex2_la-inputstrm.Plo
include ./$(DEPDIR)/libmplex2_la-interact.Plo
include ./$(DEPDIR)/libmplex2_la-lpcmstrm_in.Plo
include ./$(DEPDIR)/libmplex2_la-mpastrm_in.Plo
include ./$(DEPDIR)/libmplex2_la-multiplexor.Plo
include ./$(DEPDIR)/libmplex2_la-padstrm.Plo
include ./$(DEPDIR)/libmplex2_la-stillsstream.Plo
include ./$(DEPDIR)/libmplex2_la-stream_params.Plo
include ./$(DEPDIR)/libmplex2_la-systems.Plo
include ./$(DEPDIR)/libmplex2_la-videostrm_in.Plo
include ./$(DEPDIR)/libmplex2_la-videostrm_out.Plo
include ./$(DEPDIR)/libmplex2_la-zalphastrm_in.Plo
include ./$(DEPDIR)/libmplex2_la-zalphastrm_out.Plo
include ./$(DEPDIR)/main.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libmplex2_la-ac3strm_in.o: ac3strm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-ac3strm_in.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo" -c -o libmplex2_la-ac3strm_in.o `test -f 'ac3strm_in.cpp' || echo '$(srcdir)/'`ac3strm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo" "$(DEPDIR)/libmplex2_la-ac3strm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo"; exit 1; fi
#	source='ac3strm_in.cpp' object='libmplex2_la-ac3strm_in.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-ac3strm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-ac3strm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-ac3strm_in.o `test -f 'ac3strm_in.cpp' || echo '$(srcdir)/'`ac3strm_in.cpp

libmplex2_la-ac3strm_in.obj: ac3strm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-ac3strm_in.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo" -c -o libmplex2_la-ac3strm_in.obj `if test -f 'ac3strm_in.cpp'; then $(CYGPATH_W) 'ac3strm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/ac3strm_in.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo" "$(DEPDIR)/libmplex2_la-ac3strm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo"; exit 1; fi
#	source='ac3strm_in.cpp' object='libmplex2_la-ac3strm_in.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-ac3strm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-ac3strm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-ac3strm_in.obj `if test -f 'ac3strm_in.cpp'; then $(CYGPATH_W) 'ac3strm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/ac3strm_in.cpp'; fi`

libmplex2_la-ac3strm_in.lo: ac3strm_in.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-ac3strm_in.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo" -c -o libmplex2_la-ac3strm_in.lo `test -f 'ac3strm_in.cpp' || echo '$(srcdir)/'`ac3strm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo" "$(DEPDIR)/libmplex2_la-ac3strm_in.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-ac3strm_in.Tpo"; exit 1; fi
#	source='ac3strm_in.cpp' object='libmplex2_la-ac3strm_in.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-ac3strm_in.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-ac3strm_in.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-ac3strm_in.lo `test -f 'ac3strm_in.cpp' || echo '$(srcdir)/'`ac3strm_in.cpp

libmplex2_la-audiostrm_out.o: audiostrm_out.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-audiostrm_out.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo" -c -o libmplex2_la-audiostrm_out.o `test -f 'audiostrm_out.cpp' || echo '$(srcdir)/'`audiostrm_out.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo" "$(DEPDIR)/libmplex2_la-audiostrm_out.Po"; else rm -f "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo"; exit 1; fi
#	source='audiostrm_out.cpp' object='libmplex2_la-audiostrm_out.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-audiostrm_out.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-audiostrm_out.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-audiostrm_out.o `test -f 'audiostrm_out.cpp' || echo '$(srcdir)/'`audiostrm_out.cpp

libmplex2_la-audiostrm_out.obj: audiostrm_out.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-audiostrm_out.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo" -c -o libmplex2_la-audiostrm_out.obj `if test -f 'audiostrm_out.cpp'; then $(CYGPATH_W) 'audiostrm_out.cpp'; else $(CYGPATH_W) '$(srcdir)/audiostrm_out.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo" "$(DEPDIR)/libmplex2_la-audiostrm_out.Po"; else rm -f "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo"; exit 1; fi
#	source='audiostrm_out.cpp' object='libmplex2_la-audiostrm_out.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-audiostrm_out.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-audiostrm_out.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-audiostrm_out.obj `if test -f 'audiostrm_out.cpp'; then $(CYGPATH_W) 'audiostrm_out.cpp'; else $(CYGPATH_W) '$(srcdir)/audiostrm_out.cpp'; fi`

libmplex2_la-audiostrm_out.lo: audiostrm_out.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-audiostrm_out.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo" -c -o libmplex2_la-audiostrm_out.lo `test -f 'audiostrm_out.cpp' || echo '$(srcdir)/'`audiostrm_out.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo" "$(DEPDIR)/libmplex2_la-audiostrm_out.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-audiostrm_out.Tpo"; exit 1; fi
#	source='audiostrm_out.cpp' object='libmplex2_la-audiostrm_out.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-audiostrm_out.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-audiostrm_out.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-audiostrm_out.lo `test -f 'audiostrm_out.cpp' || echo '$(srcdir)/'`audiostrm_out.cpp

libmplex2_la-bits.o: bits.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-bits.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-bits.Tpo" -c -o libmplex2_la-bits.o `test -f 'bits.cpp' || echo '$(srcdir)/'`bits.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-bits.Tpo" "$(DEPDIR)/libmplex2_la-bits.Po"; else rm -f "$(DEPDIR)/libmplex2_la-bits.Tpo"; exit 1; fi
#	source='bits.cpp' object='libmplex2_la-bits.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-bits.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-bits.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-bits.o `test -f 'bits.cpp' || echo '$(srcdir)/'`bits.cpp

libmplex2_la-bits.obj: bits.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-bits.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-bits.Tpo" -c -o libmplex2_la-bits.obj `if test -f 'bits.cpp'; then $(CYGPATH_W) 'bits.cpp'; else $(CYGPATH_W) '$(srcdir)/bits.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-bits.Tpo" "$(DEPDIR)/libmplex2_la-bits.Po"; else rm -f "$(DEPDIR)/libmplex2_la-bits.Tpo"; exit 1; fi
#	source='bits.cpp' object='libmplex2_la-bits.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-bits.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-bits.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-bits.obj `if test -f 'bits.cpp'; then $(CYGPATH_W) 'bits.cpp'; else $(CYGPATH_W) '$(srcdir)/bits.cpp'; fi`

libmplex2_la-bits.lo: bits.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-bits.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-bits.Tpo" -c -o libmplex2_la-bits.lo `test -f 'bits.cpp' || echo '$(srcdir)/'`bits.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-bits.Tpo" "$(DEPDIR)/libmplex2_la-bits.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-bits.Tpo"; exit 1; fi
#	source='bits.cpp' object='libmplex2_la-bits.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-bits.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-bits.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-bits.lo `test -f 'bits.cpp' || echo '$(srcdir)/'`bits.cpp

libmplex2_la-decodebufmodel.o: decodebufmodel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-decodebufmodel.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo" -c -o libmplex2_la-decodebufmodel.o `test -f 'decodebufmodel.cpp' || echo '$(srcdir)/'`decodebufmodel.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo" "$(DEPDIR)/libmplex2_la-decodebufmodel.Po"; else rm -f "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo"; exit 1; fi
#	source='decodebufmodel.cpp' object='libmplex2_la-decodebufmodel.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-decodebufmodel.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-decodebufmodel.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-decodebufmodel.o `test -f 'decodebufmodel.cpp' || echo '$(srcdir)/'`decodebufmodel.cpp

libmplex2_la-decodebufmodel.obj: decodebufmodel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-decodebufmodel.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo" -c -o libmplex2_la-decodebufmodel.obj `if test -f 'decodebufmodel.cpp'; then $(CYGPATH_W) 'decodebufmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/decodebufmodel.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo" "$(DEPDIR)/libmplex2_la-decodebufmodel.Po"; else rm -f "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo"; exit 1; fi
#	source='decodebufmodel.cpp' object='libmplex2_la-decodebufmodel.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-decodebufmodel.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-decodebufmodel.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-decodebufmodel.obj `if test -f 'decodebufmodel.cpp'; then $(CYGPATH_W) 'decodebufmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/decodebufmodel.cpp'; fi`

libmplex2_la-decodebufmodel.lo: decodebufmodel.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-decodebufmodel.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo" -c -o libmplex2_la-decodebufmodel.lo `test -f 'decodebufmodel.cpp' || echo '$(srcdir)/'`decodebufmodel.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo" "$(DEPDIR)/libmplex2_la-decodebufmodel.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-decodebufmodel.Tpo"; exit 1; fi
#	source='decodebufmodel.cpp' object='libmplex2_la-decodebufmodel.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-decodebufmodel.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-decodebufmodel.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-decodebufmodel.lo `test -f 'decodebufmodel.cpp' || echo '$(srcdir)/'`decodebufmodel.cpp

libmplex2_la-dtsstrm_in.o: dtsstrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-dtsstrm_in.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo" -c -o libmplex2_la-dtsstrm_in.o `test -f 'dtsstrm_in.cpp' || echo '$(srcdir)/'`dtsstrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo" "$(DEPDIR)/libmplex2_la-dtsstrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo"; exit 1; fi
#	source='dtsstrm_in.cpp' object='libmplex2_la-dtsstrm_in.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-dtsstrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-dtsstrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-dtsstrm_in.o `test -f 'dtsstrm_in.cpp' || echo '$(srcdir)/'`dtsstrm_in.cpp

libmplex2_la-dtsstrm_in.obj: dtsstrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-dtsstrm_in.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo" -c -o libmplex2_la-dtsstrm_in.obj `if test -f 'dtsstrm_in.cpp'; then $(CYGPATH_W) 'dtsstrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/dtsstrm_in.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo" "$(DEPDIR)/libmplex2_la-dtsstrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo"; exit 1; fi
#	source='dtsstrm_in.cpp' object='libmplex2_la-dtsstrm_in.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-dtsstrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-dtsstrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-dtsstrm_in.obj `if test -f 'dtsstrm_in.cpp'; then $(CYGPATH_W) 'dtsstrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/dtsstrm_in.cpp'; fi`

libmplex2_la-dtsstrm_in.lo: dtsstrm_in.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-dtsstrm_in.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo" -c -o libmplex2_la-dtsstrm_in.lo `test -f 'dtsstrm_in.cpp' || echo '$(srcdir)/'`dtsstrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo" "$(DEPDIR)/libmplex2_la-dtsstrm_in.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-dtsstrm_in.Tpo"; exit 1; fi
#	source='dtsstrm_in.cpp' object='libmplex2_la-dtsstrm_in.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-dtsstrm_in.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-dtsstrm_in.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-dtsstrm_in.lo `test -f 'dtsstrm_in.cpp' || echo '$(srcdir)/'`dtsstrm_in.cpp

libmplex2_la-inputstrm.o: inputstrm.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-inputstrm.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-inputstrm.Tpo" -c -o libmplex2_la-inputstrm.o `test -f 'inputstrm.cpp' || echo '$(srcdir)/'`inputstrm.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-inputstrm.Tpo" "$(DEPDIR)/libmplex2_la-inputstrm.Po"; else rm -f "$(DEPDIR)/libmplex2_la-inputstrm.Tpo"; exit 1; fi
#	source='inputstrm.cpp' object='libmplex2_la-inputstrm.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-inputstrm.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-inputstrm.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-inputstrm.o `test -f 'inputstrm.cpp' || echo '$(srcdir)/'`inputstrm.cpp

libmplex2_la-inputstrm.obj: inputstrm.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-inputstrm.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-inputstrm.Tpo" -c -o libmplex2_la-inputstrm.obj `if test -f 'inputstrm.cpp'; then $(CYGPATH_W) 'inputstrm.cpp'; else $(CYGPATH_W) '$(srcdir)/inputstrm.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-inputstrm.Tpo" "$(DEPDIR)/libmplex2_la-inputstrm.Po"; else rm -f "$(DEPDIR)/libmplex2_la-inputstrm.Tpo"; exit 1; fi
#	source='inputstrm.cpp' object='libmplex2_la-inputstrm.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-inputstrm.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-inputstrm.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-inputstrm.obj `if test -f 'inputstrm.cpp'; then $(CYGPATH_W) 'inputstrm.cpp'; else $(CYGPATH_W) '$(srcdir)/inputstrm.cpp'; fi`

libmplex2_la-inputstrm.lo: inputstrm.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-inputstrm.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-inputstrm.Tpo" -c -o libmplex2_la-inputstrm.lo `test -f 'inputstrm.cpp' || echo '$(srcdir)/'`inputstrm.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-inputstrm.Tpo" "$(DEPDIR)/libmplex2_la-inputstrm.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-inputstrm.Tpo"; exit 1; fi
#	source='inputstrm.cpp' object='libmplex2_la-inputstrm.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-inputstrm.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-inputstrm.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-inputstrm.lo `test -f 'inputstrm.cpp' || echo '$(srcdir)/'`inputstrm.cpp

libmplex2_la-interact.o: interact.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-interact.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-interact.Tpo" -c -o libmplex2_la-interact.o `test -f 'interact.cpp' || echo '$(srcdir)/'`interact.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-interact.Tpo" "$(DEPDIR)/libmplex2_la-interact.Po"; else rm -f "$(DEPDIR)/libmplex2_la-interact.Tpo"; exit 1; fi
#	source='interact.cpp' object='libmplex2_la-interact.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-interact.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-interact.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-interact.o `test -f 'interact.cpp' || echo '$(srcdir)/'`interact.cpp

libmplex2_la-interact.obj: interact.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-interact.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-interact.Tpo" -c -o libmplex2_la-interact.obj `if test -f 'interact.cpp'; then $(CYGPATH_W) 'interact.cpp'; else $(CYGPATH_W) '$(srcdir)/interact.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-interact.Tpo" "$(DEPDIR)/libmplex2_la-interact.Po"; else rm -f "$(DEPDIR)/libmplex2_la-interact.Tpo"; exit 1; fi
#	source='interact.cpp' object='libmplex2_la-interact.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-interact.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-interact.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-interact.obj `if test -f 'interact.cpp'; then $(CYGPATH_W) 'interact.cpp'; else $(CYGPATH_W) '$(srcdir)/interact.cpp'; fi`

libmplex2_la-interact.lo: interact.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-interact.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-interact.Tpo" -c -o libmplex2_la-interact.lo `test -f 'interact.cpp' || echo '$(srcdir)/'`interact.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-interact.Tpo" "$(DEPDIR)/libmplex2_la-interact.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-interact.Tpo"; exit 1; fi
#	source='interact.cpp' object='libmplex2_la-interact.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-interact.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-interact.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-interact.lo `test -f 'interact.cpp' || echo '$(srcdir)/'`interact.cpp

libmplex2_la-lpcmstrm_in.o: lpcmstrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-lpcmstrm_in.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo" -c -o libmplex2_la-lpcmstrm_in.o `test -f 'lpcmstrm_in.cpp' || echo '$(srcdir)/'`lpcmstrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo" "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo"; exit 1; fi
#	source='lpcmstrm_in.cpp' object='libmplex2_la-lpcmstrm_in.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-lpcmstrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-lpcmstrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-lpcmstrm_in.o `test -f 'lpcmstrm_in.cpp' || echo '$(srcdir)/'`lpcmstrm_in.cpp

libmplex2_la-lpcmstrm_in.obj: lpcmstrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-lpcmstrm_in.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo" -c -o libmplex2_la-lpcmstrm_in.obj `if test -f 'lpcmstrm_in.cpp'; then $(CYGPATH_W) 'lpcmstrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/lpcmstrm_in.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo" "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo"; exit 1; fi
#	source='lpcmstrm_in.cpp' object='libmplex2_la-lpcmstrm_in.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-lpcmstrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-lpcmstrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-lpcmstrm_in.obj `if test -f 'lpcmstrm_in.cpp'; then $(CYGPATH_W) 'lpcmstrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/lpcmstrm_in.cpp'; fi`

libmplex2_la-lpcmstrm_in.lo: lpcmstrm_in.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-lpcmstrm_in.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo" -c -o libmplex2_la-lpcmstrm_in.lo `test -f 'lpcmstrm_in.cpp' || echo '$(srcdir)/'`lpcmstrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo" "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-lpcmstrm_in.Tpo"; exit 1; fi
#	source='lpcmstrm_in.cpp' object='libmplex2_la-lpcmstrm_in.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-lpcmstrm_in.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-lpcmstrm_in.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-lpcmstrm_in.lo `test -f 'lpcmstrm_in.cpp' || echo '$(srcdir)/'`lpcmstrm_in.cpp

libmplex2_la-mpastrm_in.o: mpastrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-mpastrm_in.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo" -c -o libmplex2_la-mpastrm_in.o `test -f 'mpastrm_in.cpp' || echo '$(srcdir)/'`mpastrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo" "$(DEPDIR)/libmplex2_la-mpastrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo"; exit 1; fi
#	source='mpastrm_in.cpp' object='libmplex2_la-mpastrm_in.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-mpastrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-mpastrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-mpastrm_in.o `test -f 'mpastrm_in.cpp' || echo '$(srcdir)/'`mpastrm_in.cpp

libmplex2_la-mpastrm_in.obj: mpastrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-mpastrm_in.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo" -c -o libmplex2_la-mpastrm_in.obj `if test -f 'mpastrm_in.cpp'; then $(CYGPATH_W) 'mpastrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/mpastrm_in.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo" "$(DEPDIR)/libmplex2_la-mpastrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo"; exit 1; fi
#	source='mpastrm_in.cpp' object='libmplex2_la-mpastrm_in.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-mpastrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-mpastrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-mpastrm_in.obj `if test -f 'mpastrm_in.cpp'; then $(CYGPATH_W) 'mpastrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/mpastrm_in.cpp'; fi`

libmplex2_la-mpastrm_in.lo: mpastrm_in.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-mpastrm_in.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo" -c -o libmplex2_la-mpastrm_in.lo `test -f 'mpastrm_in.cpp' || echo '$(srcdir)/'`mpastrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo" "$(DEPDIR)/libmplex2_la-mpastrm_in.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-mpastrm_in.Tpo"; exit 1; fi
#	source='mpastrm_in.cpp' object='libmplex2_la-mpastrm_in.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-mpastrm_in.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-mpastrm_in.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-mpastrm_in.lo `test -f 'mpastrm_in.cpp' || echo '$(srcdir)/'`mpastrm_in.cpp

libmplex2_la-multiplexor.o: multiplexor.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-multiplexor.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-multiplexor.Tpo" -c -o libmplex2_la-multiplexor.o `test -f 'multiplexor.cpp' || echo '$(srcdir)/'`multiplexor.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-multiplexor.Tpo" "$(DEPDIR)/libmplex2_la-multiplexor.Po"; else rm -f "$(DEPDIR)/libmplex2_la-multiplexor.Tpo"; exit 1; fi
#	source='multiplexor.cpp' object='libmplex2_la-multiplexor.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-multiplexor.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-multiplexor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-multiplexor.o `test -f 'multiplexor.cpp' || echo '$(srcdir)/'`multiplexor.cpp

libmplex2_la-multiplexor.obj: multiplexor.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-multiplexor.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-multiplexor.Tpo" -c -o libmplex2_la-multiplexor.obj `if test -f 'multiplexor.cpp'; then $(CYGPATH_W) 'multiplexor.cpp'; else $(CYGPATH_W) '$(srcdir)/multiplexor.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-multiplexor.Tpo" "$(DEPDIR)/libmplex2_la-multiplexor.Po"; else rm -f "$(DEPDIR)/libmplex2_la-multiplexor.Tpo"; exit 1; fi
#	source='multiplexor.cpp' object='libmplex2_la-multiplexor.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-multiplexor.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-multiplexor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-multiplexor.obj `if test -f 'multiplexor.cpp'; then $(CYGPATH_W) 'multiplexor.cpp'; else $(CYGPATH_W) '$(srcdir)/multiplexor.cpp'; fi`

libmplex2_la-multiplexor.lo: multiplexor.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-multiplexor.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-multiplexor.Tpo" -c -o libmplex2_la-multiplexor.lo `test -f 'multiplexor.cpp' || echo '$(srcdir)/'`multiplexor.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-multiplexor.Tpo" "$(DEPDIR)/libmplex2_la-multiplexor.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-multiplexor.Tpo"; exit 1; fi
#	source='multiplexor.cpp' object='libmplex2_la-multiplexor.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-multiplexor.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-multiplexor.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-multiplexor.lo `test -f 'multiplexor.cpp' || echo '$(srcdir)/'`multiplexor.cpp

libmplex2_la-padstrm.o: padstrm.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-padstrm.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-padstrm.Tpo" -c -o libmplex2_la-padstrm.o `test -f 'padstrm.cpp' || echo '$(srcdir)/'`padstrm.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-padstrm.Tpo" "$(DEPDIR)/libmplex2_la-padstrm.Po"; else rm -f "$(DEPDIR)/libmplex2_la-padstrm.Tpo"; exit 1; fi
#	source='padstrm.cpp' object='libmplex2_la-padstrm.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-padstrm.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-padstrm.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-padstrm.o `test -f 'padstrm.cpp' || echo '$(srcdir)/'`padstrm.cpp

libmplex2_la-padstrm.obj: padstrm.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-padstrm.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-padstrm.Tpo" -c -o libmplex2_la-padstrm.obj `if test -f 'padstrm.cpp'; then $(CYGPATH_W) 'padstrm.cpp'; else $(CYGPATH_W) '$(srcdir)/padstrm.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-padstrm.Tpo" "$(DEPDIR)/libmplex2_la-padstrm.Po"; else rm -f "$(DEPDIR)/libmplex2_la-padstrm.Tpo"; exit 1; fi
#	source='padstrm.cpp' object='libmplex2_la-padstrm.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-padstrm.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-padstrm.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-padstrm.obj `if test -f 'padstrm.cpp'; then $(CYGPATH_W) 'padstrm.cpp'; else $(CYGPATH_W) '$(srcdir)/padstrm.cpp'; fi`

libmplex2_la-padstrm.lo: padstrm.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-padstrm.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-padstrm.Tpo" -c -o libmplex2_la-padstrm.lo `test -f 'padstrm.cpp' || echo '$(srcdir)/'`padstrm.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-padstrm.Tpo" "$(DEPDIR)/libmplex2_la-padstrm.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-padstrm.Tpo"; exit 1; fi
#	source='padstrm.cpp' object='libmplex2_la-padstrm.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-padstrm.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-padstrm.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-padstrm.lo `test -f 'padstrm.cpp' || echo '$(srcdir)/'`padstrm.cpp

libmplex2_la-stillsstream.o: stillsstream.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-stillsstream.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-stillsstream.Tpo" -c -o libmplex2_la-stillsstream.o `test -f 'stillsstream.cpp' || echo '$(srcdir)/'`stillsstream.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-stillsstream.Tpo" "$(DEPDIR)/libmplex2_la-stillsstream.Po"; else rm -f "$(DEPDIR)/libmplex2_la-stillsstream.Tpo"; exit 1; fi
#	source='stillsstream.cpp' object='libmplex2_la-stillsstream.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-stillsstream.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-stillsstream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-stillsstream.o `test -f 'stillsstream.cpp' || echo '$(srcdir)/'`stillsstream.cpp

libmplex2_la-stillsstream.obj: stillsstream.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-stillsstream.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-stillsstream.Tpo" -c -o libmplex2_la-stillsstream.obj `if test -f 'stillsstream.cpp'; then $(CYGPATH_W) 'stillsstream.cpp'; else $(CYGPATH_W) '$(srcdir)/stillsstream.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-stillsstream.Tpo" "$(DEPDIR)/libmplex2_la-stillsstream.Po"; else rm -f "$(DEPDIR)/libmplex2_la-stillsstream.Tpo"; exit 1; fi
#	source='stillsstream.cpp' object='libmplex2_la-stillsstream.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-stillsstream.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-stillsstream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-stillsstream.obj `if test -f 'stillsstream.cpp'; then $(CYGPATH_W) 'stillsstream.cpp'; else $(CYGPATH_W) '$(srcdir)/stillsstream.cpp'; fi`

libmplex2_la-stillsstream.lo: stillsstream.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-stillsstream.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-stillsstream.Tpo" -c -o libmplex2_la-stillsstream.lo `test -f 'stillsstream.cpp' || echo '$(srcdir)/'`stillsstream.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-stillsstream.Tpo" "$(DEPDIR)/libmplex2_la-stillsstream.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-stillsstream.Tpo"; exit 1; fi
#	source='stillsstream.cpp' object='libmplex2_la-stillsstream.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-stillsstream.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-stillsstream.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-stillsstream.lo `test -f 'stillsstream.cpp' || echo '$(srcdir)/'`stillsstream.cpp

libmplex2_la-stream_params.o: stream_params.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-stream_params.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-stream_params.Tpo" -c -o libmplex2_la-stream_params.o `test -f 'stream_params.cpp' || echo '$(srcdir)/'`stream_params.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-stream_params.Tpo" "$(DEPDIR)/libmplex2_la-stream_params.Po"; else rm -f "$(DEPDIR)/libmplex2_la-stream_params.Tpo"; exit 1; fi
#	source='stream_params.cpp' object='libmplex2_la-stream_params.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-stream_params.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-stream_params.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-stream_params.o `test -f 'stream_params.cpp' || echo '$(srcdir)/'`stream_params.cpp

libmplex2_la-stream_params.obj: stream_params.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-stream_params.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-stream_params.Tpo" -c -o libmplex2_la-stream_params.obj `if test -f 'stream_params.cpp'; then $(CYGPATH_W) 'stream_params.cpp'; else $(CYGPATH_W) '$(srcdir)/stream_params.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-stream_params.Tpo" "$(DEPDIR)/libmplex2_la-stream_params.Po"; else rm -f "$(DEPDIR)/libmplex2_la-stream_params.Tpo"; exit 1; fi
#	source='stream_params.cpp' object='libmplex2_la-stream_params.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-stream_params.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-stream_params.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-stream_params.obj `if test -f 'stream_params.cpp'; then $(CYGPATH_W) 'stream_params.cpp'; else $(CYGPATH_W) '$(srcdir)/stream_params.cpp'; fi`

libmplex2_la-stream_params.lo: stream_params.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-stream_params.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-stream_params.Tpo" -c -o libmplex2_la-stream_params.lo `test -f 'stream_params.cpp' || echo '$(srcdir)/'`stream_params.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-stream_params.Tpo" "$(DEPDIR)/libmplex2_la-stream_params.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-stream_params.Tpo"; exit 1; fi
#	source='stream_params.cpp' object='libmplex2_la-stream_params.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-stream_params.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-stream_params.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-stream_params.lo `test -f 'stream_params.cpp' || echo '$(srcdir)/'`stream_params.cpp

libmplex2_la-systems.o: systems.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-systems.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-systems.Tpo" -c -o libmplex2_la-systems.o `test -f 'systems.cpp' || echo '$(srcdir)/'`systems.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-systems.Tpo" "$(DEPDIR)/libmplex2_la-systems.Po"; else rm -f "$(DEPDIR)/libmplex2_la-systems.Tpo"; exit 1; fi
#	source='systems.cpp' object='libmplex2_la-systems.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-systems.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-systems.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-systems.o `test -f 'systems.cpp' || echo '$(srcdir)/'`systems.cpp

libmplex2_la-systems.obj: systems.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-systems.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-systems.Tpo" -c -o libmplex2_la-systems.obj `if test -f 'systems.cpp'; then $(CYGPATH_W) 'systems.cpp'; else $(CYGPATH_W) '$(srcdir)/systems.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-systems.Tpo" "$(DEPDIR)/libmplex2_la-systems.Po"; else rm -f "$(DEPDIR)/libmplex2_la-systems.Tpo"; exit 1; fi
#	source='systems.cpp' object='libmplex2_la-systems.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-systems.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-systems.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-systems.obj `if test -f 'systems.cpp'; then $(CYGPATH_W) 'systems.cpp'; else $(CYGPATH_W) '$(srcdir)/systems.cpp'; fi`

libmplex2_la-systems.lo: systems.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-systems.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-systems.Tpo" -c -o libmplex2_la-systems.lo `test -f 'systems.cpp' || echo '$(srcdir)/'`systems.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-systems.Tpo" "$(DEPDIR)/libmplex2_la-systems.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-systems.Tpo"; exit 1; fi
#	source='systems.cpp' object='libmplex2_la-systems.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-systems.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-systems.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-systems.lo `test -f 'systems.cpp' || echo '$(srcdir)/'`systems.cpp

libmplex2_la-videostrm_in.o: videostrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-videostrm_in.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo" -c -o libmplex2_la-videostrm_in.o `test -f 'videostrm_in.cpp' || echo '$(srcdir)/'`videostrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo" "$(DEPDIR)/libmplex2_la-videostrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo"; exit 1; fi
#	source='videostrm_in.cpp' object='libmplex2_la-videostrm_in.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-videostrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-videostrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-videostrm_in.o `test -f 'videostrm_in.cpp' || echo '$(srcdir)/'`videostrm_in.cpp

libmplex2_la-videostrm_in.obj: videostrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-videostrm_in.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo" -c -o libmplex2_la-videostrm_in.obj `if test -f 'videostrm_in.cpp'; then $(CYGPATH_W) 'videostrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/videostrm_in.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo" "$(DEPDIR)/libmplex2_la-videostrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo"; exit 1; fi
#	source='videostrm_in.cpp' object='libmplex2_la-videostrm_in.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-videostrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-videostrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-videostrm_in.obj `if test -f 'videostrm_in.cpp'; then $(CYGPATH_W) 'videostrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/videostrm_in.cpp'; fi`

libmplex2_la-videostrm_in.lo: videostrm_in.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-videostrm_in.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo" -c -o libmplex2_la-videostrm_in.lo `test -f 'videostrm_in.cpp' || echo '$(srcdir)/'`videostrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo" "$(DEPDIR)/libmplex2_la-videostrm_in.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-videostrm_in.Tpo"; exit 1; fi
#	source='videostrm_in.cpp' object='libmplex2_la-videostrm_in.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-videostrm_in.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-videostrm_in.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-videostrm_in.lo `test -f 'videostrm_in.cpp' || echo '$(srcdir)/'`videostrm_in.cpp

libmplex2_la-videostrm_out.o: videostrm_out.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-videostrm_out.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo" -c -o libmplex2_la-videostrm_out.o `test -f 'videostrm_out.cpp' || echo '$(srcdir)/'`videostrm_out.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo" "$(DEPDIR)/libmplex2_la-videostrm_out.Po"; else rm -f "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo"; exit 1; fi
#	source='videostrm_out.cpp' object='libmplex2_la-videostrm_out.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-videostrm_out.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-videostrm_out.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-videostrm_out.o `test -f 'videostrm_out.cpp' || echo '$(srcdir)/'`videostrm_out.cpp

libmplex2_la-videostrm_out.obj: videostrm_out.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-videostrm_out.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo" -c -o libmplex2_la-videostrm_out.obj `if test -f 'videostrm_out.cpp'; then $(CYGPATH_W) 'videostrm_out.cpp'; else $(CYGPATH_W) '$(srcdir)/videostrm_out.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo" "$(DEPDIR)/libmplex2_la-videostrm_out.Po"; else rm -f "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo"; exit 1; fi
#	source='videostrm_out.cpp' object='libmplex2_la-videostrm_out.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-videostrm_out.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-videostrm_out.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-videostrm_out.obj `if test -f 'videostrm_out.cpp'; then $(CYGPATH_W) 'videostrm_out.cpp'; else $(CYGPATH_W) '$(srcdir)/videostrm_out.cpp'; fi`

libmplex2_la-videostrm_out.lo: videostrm_out.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-videostrm_out.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo" -c -o libmplex2_la-videostrm_out.lo `test -f 'videostrm_out.cpp' || echo '$(srcdir)/'`videostrm_out.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo" "$(DEPDIR)/libmplex2_la-videostrm_out.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-videostrm_out.Tpo"; exit 1; fi
#	source='videostrm_out.cpp' object='libmplex2_la-videostrm_out.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-videostrm_out.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-videostrm_out.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-videostrm_out.lo `test -f 'videostrm_out.cpp' || echo '$(srcdir)/'`videostrm_out.cpp

libmplex2_la-zalphastrm_in.o: zalphastrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-zalphastrm_in.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo" -c -o libmplex2_la-zalphastrm_in.o `test -f 'zalphastrm_in.cpp' || echo '$(srcdir)/'`zalphastrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo" "$(DEPDIR)/libmplex2_la-zalphastrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo"; exit 1; fi
#	source='zalphastrm_in.cpp' object='libmplex2_la-zalphastrm_in.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-zalphastrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-zalphastrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-zalphastrm_in.o `test -f 'zalphastrm_in.cpp' || echo '$(srcdir)/'`zalphastrm_in.cpp

libmplex2_la-zalphastrm_in.obj: zalphastrm_in.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-zalphastrm_in.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo" -c -o libmplex2_la-zalphastrm_in.obj `if test -f 'zalphastrm_in.cpp'; then $(CYGPATH_W) 'zalphastrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/zalphastrm_in.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo" "$(DEPDIR)/libmplex2_la-zalphastrm_in.Po"; else rm -f "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo"; exit 1; fi
#	source='zalphastrm_in.cpp' object='libmplex2_la-zalphastrm_in.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-zalphastrm_in.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-zalphastrm_in.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-zalphastrm_in.obj `if test -f 'zalphastrm_in.cpp'; then $(CYGPATH_W) 'zalphastrm_in.cpp'; else $(CYGPATH_W) '$(srcdir)/zalphastrm_in.cpp'; fi`

libmplex2_la-zalphastrm_in.lo: zalphastrm_in.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-zalphastrm_in.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo" -c -o libmplex2_la-zalphastrm_in.lo `test -f 'zalphastrm_in.cpp' || echo '$(srcdir)/'`zalphastrm_in.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo" "$(DEPDIR)/libmplex2_la-zalphastrm_in.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-zalphastrm_in.Tpo"; exit 1; fi
#	source='zalphastrm_in.cpp' object='libmplex2_la-zalphastrm_in.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-zalphastrm_in.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-zalphastrm_in.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-zalphastrm_in.lo `test -f 'zalphastrm_in.cpp' || echo '$(srcdir)/'`zalphastrm_in.cpp

libmplex2_la-zalphastrm_out.o: zalphastrm_out.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-zalphastrm_out.o -MD -MP -MF "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo" -c -o libmplex2_la-zalphastrm_out.o `test -f 'zalphastrm_out.cpp' || echo '$(srcdir)/'`zalphastrm_out.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo" "$(DEPDIR)/libmplex2_la-zalphastrm_out.Po"; else rm -f "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo"; exit 1; fi
#	source='zalphastrm_out.cpp' object='libmplex2_la-zalphastrm_out.o' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-zalphastrm_out.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-zalphastrm_out.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-zalphastrm_out.o `test -f 'zalphastrm_out.cpp' || echo '$(srcdir)/'`zalphastrm_out.cpp

libmplex2_la-zalphastrm_out.obj: zalphastrm_out.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-zalphastrm_out.obj -MD -MP -MF "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo" -c -o libmplex2_la-zalphastrm_out.obj `if test -f 'zalphastrm_out.cpp'; then $(CYGPATH_W) 'zalphastrm_out.cpp'; else $(CYGPATH_W) '$(srcdir)/zalphastrm_out.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo" "$(DEPDIR)/libmplex2_la-zalphastrm_out.Po"; else rm -f "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo"; exit 1; fi
#	source='zalphastrm_out.cpp' object='libmplex2_la-zalphastrm_out.obj' libtool=no \
#	depfile='$(DEPDIR)/libmplex2_la-zalphastrm_out.Po' tmpdepfile='$(DEPDIR)/libmplex2_la-zalphastrm_out.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-zalphastrm_out.obj `if test -f 'zalphastrm_out.cpp'; then $(CYGPATH_W) 'zalphastrm_out.cpp'; else $(CYGPATH_W) '$(srcdir)/zalphastrm_out.cpp'; fi`

libmplex2_la-zalphastrm_out.lo: zalphastrm_out.cpp
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -MT libmplex2_la-zalphastrm_out.lo -MD -MP -MF "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo" -c -o libmplex2_la-zalphastrm_out.lo `test -f 'zalphastrm_out.cpp' || echo '$(srcdir)/'`zalphastrm_out.cpp; \
	then mv -f "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo" "$(DEPDIR)/libmplex2_la-zalphastrm_out.Plo"; else rm -f "$(DEPDIR)/libmplex2_la-zalphastrm_out.Tpo"; exit 1; fi
#	source='zalphastrm_out.cpp' object='libmplex2_la-zalphastrm_out.lo' libtool=yes \
#	depfile='$(DEPDIR)/libmplex2_la-zalphastrm_out.Plo' tmpdepfile='$(DEPDIR)/libmplex2_la-zalphastrm_out.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmplex2_la_CXXFLAGS) $(CXXFLAGS) -c -o libmplex2_la-zalphastrm_out.lo `test -f 'zalphastrm_out.cpp' || echo '$(srcdir)/'`zalphastrm_out.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libmplex_includeHEADERS: $(libmplex_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libmplex_includedir)" || $(mkdir_p) "$(DESTDIR)$(libmplex_includedir)"
	@list='$(libmplex_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libmplex_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libmplex_includedir)/$$f'"; \
	  $(libmplex_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libmplex_includedir)/$$f"; \
	done

uninstall-libmplex_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmplex_include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(libmplex_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libmplex_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libmplex_includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libmplex_includeHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-libmplex_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libmplex_includeHEADERS install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libmplex_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
